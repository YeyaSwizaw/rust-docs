initSidebarItems({"fn":[["next_id","Returns the next unique noisemap id. If implementing a custom noisemap, use this function to give each instance an id."]],"struct":[["NoiseMap","The standard noise map.This is the base noise map, and is created by wrapping a  noise source. It has properties that allow the setting of the generation seed, the size of the generated chunks, and the coordinate scale."],["NoiseMapCombination","A combination of noise maps.Created when two noise maps are added together. The resulting noise map values will be normalised to between -1 and 1. This will take on the size of the largest noise map in the combination, meaning you only have to set the size once."],["ScaledNoiseMap","A scaled noise map.Created when a noise map is multiplied:"],["Seed","Sets the seed that is used for generating the noise."],["Size","Sets the size of the generated chunks.The default values of this are 0, so if you do not set this then nothing will be generated. In a combination it needs to be set for only one of the member noisemaps, because the size will be set to whichever is largest when the combination is created."],["Step","Sets the increment in x and y for each coordinate in the noise map.The default values of this are 0, so if you do not set this then every value will be the same."]],"trait":[["NoiseMapGenerator","This trait contains functions used for initially creating and combining noisemaps. (The ```Mul``` requirement is used for scaling a noisemap)"],["NoiseMapGeneratorBase","Base trait for noise maps. This trait containts functions relevent to the actual map generation, and is all that is required for constraints to generate a world.`NoiseMap`, `ScaledNoiseMap`, and `NoiseMapCombination` all implement this trait."],["Property","A property is an option that can be set on a noise map."]]});